#!/usr/bin/make -f

export INSTALL_MOD_DIR := extra

PLATFORMS := cx308p-48y-t cx312p-48y-t cx532p-t cx564p-t cx732q-t
HWSKUS := x86_64-asterfusion_cx308p_48y_t-r0 x86_64-asterfusion_cx312p_48y_t-r0 x86_64-asterfusion_cx532p_t-r0 x86_64-asterfusion_cx564p_t-r0 x86_64-asterfusion_cx732q_t-r0
PACKAGES := sonic-platform-asterfusion-cx308p-48y-t sonic-platform-asterfusion-cx312p-48y-t sonic-platform-asterfusion-cx532p-t sonic-platform-asterfusion-cx564p-t sonic-platform-asterfusion-cx732q-t

KVERSION ?= $(shell uname -r)
KERNERDIR :=  /lib/modules/$(KVERSION)
PYTHON3 ?= python3

CHASSIS := sonic_platform
MODULES := modules
SCRIPTS := scripts
SERVICE := service
UTILS := utils

CGOSDRVSRC := cgoslx
SIODRVSRC := superio

CHASSISDIR := $(shell pwd)/$(CHASSIS)
MODULEDIR := $(shell pwd)/$(MODULES)
SCRIPTSDIR := $(shell pwd)/$(SCRIPTS)
UTILSDIR := $(shell pwd)/$(UTILS)

BUILDDIR := $(shell pwd)/build
CHASSISBLDDIR := $(BUILDDIR)/wheel

%:
	dh $@ --with systemd,python3 --buildsystem=pybuild

override_dh_auto_build:
	echo "Building cgos drivers ... $(MODULEDIR)/$(CGOSDRVSRC)"; \
	make KERNELDIR=$(KERNERDIR)/build -C $(MODULEDIR)/$(CGOSDRVSRC); \
	echo "Building superio drivers ... $(MODULEDIR)/$(SIODRVSRC)"; \
	make -C $(KERNERDIR)/build M=$(MODULEDIR)/$(SIODRVSRC); \
	echo "Building chassis wheel ... $(CHASSISBLDDIR)"; \
	$(PYTHON3) setup.py bdist_wheel -d $(CHASSISBLDDIR); \

override_dh_auto_install:
	platform=$(word 1, $(PLATFORMS)); \
	hwsku=$(word 1, $(HWSKUS)); \
	package=$(word 1, $(PACKAGES)); \
	echo "Installing ... $$hwsku -> $$platform -> $$package";\
	mkdir -p debian/$$package/usr/bin; \
	mkdir -p debian/$$package/$(KERNERDIR)/$(INSTALL_MOD_DIR); \
	mkdir -p debian/$$package/usr/local/bin; \
	mkdir -p debian/$$package/lib/systemd/system; \
	mkdir -p debian/$$package/lib/x86_64-linux-gnu; \
	mkdir -p debian/$$package/usr/share/sonic/device/$$hwsku; \
	cp -r $$platform/$(SERVICE)/*.service debian/$$package/lib/systemd/system/; \
	cp -r $$platform/$(UTILS)/* $(UTILSDIR)/* debian/$$package/usr/local/bin/; \
	cp -r $(SCRIPTSDIR)/* debian/$$package/usr/bin/; \
	cp -r $(MODULEDIR)/$(CGOSDRVSRC)/CgosDrv/Lx/*.ko debian/$$package/$(KERNERDIR)/$(INSTALL_MOD_DIR)/; \
	cp -r $(MODULEDIR)/$(CGOSDRVSRC)/CgosLib/Lx/libcgos.so debian/$$package/lib/x86_64-linux-gnu/; \
	cp -r $(CHASSISBLDDIR)/* debian/$$package/usr/share/sonic/device/$$hwsku/; \
	\
	platform=$(word 2, $(PLATFORMS)); \
	hwsku=$(word 2, $(HWSKUS)); \
	package=$(word 2, $(PACKAGES)); \
	echo "Installing ... $$hwsku -> $$platform -> $$package"; \
	mkdir -p debian/$$package/usr/bin; \
	mkdir -p debian/$$package/$(KERNERDIR)/$(INSTALL_MOD_DIR); \
	mkdir -p debian/$$package/usr/local/bin; \
	mkdir -p debian/$$package/lib/systemd/system; \
	mkdir -p debian/$$package/lib/x86_64-linux-gnu; \
	mkdir -p debian/$$package/usr/share/sonic/device/$$hwsku; \
	cp -r $$platform/$(SERVICE)/*.service debian/$$package/lib/systemd/system/; \
	cp -r $$platform/$(UTILS)/* $(UTILSDIR)/* debian/$$package/usr/local/bin/; \
	cp -r $(SCRIPTSDIR)/* debian/$$package/usr/bin/; \
	cp -r $(MODULEDIR)/$(SIODRVSRC)/*.ko debian/$$package/$(KERNERDIR)/$(INSTALL_MOD_DIR)/; \
	cp -r $(CHASSISBLDDIR)/* debian/$$package/usr/share/sonic/device/$$hwsku/; \
	\
	platform=$(word 3, $(PLATFORMS)); \
	hwsku=$(word 3, $(HWSKUS)); \
	package=$(word 3, $(PACKAGES)); \
	echo "Installing ... $$hwsku -> $$platform -> $$package";\
	mkdir -p debian/$$package/usr/bin; \
	mkdir -p debian/$$package/$(KERNERDIR)/$(INSTALL_MOD_DIR); \
	mkdir -p debian/$$package/usr/local/bin; \
	mkdir -p debian/$$package/lib/systemd/system; \
	mkdir -p debian/$$package/lib/x86_64-linux-gnu; \
	mkdir -p debian/$$package/usr/share/sonic/device/$$hwsku; \
	cp -r $$platform/$(SERVICE)/*.service debian/$$package/lib/systemd/system/; \
	cp -r $$platform/$(UTILS)/* $(UTILSDIR)/* debian/$$package/usr/local/bin/; \
	cp -r $(SCRIPTSDIR)/* debian/$$package/usr/bin/; \
	cp -r $(MODULEDIR)/$(CGOSDRVSRC)/CgosDrv/Lx/*.ko debian/$$package/$(KERNERDIR)/$(INSTALL_MOD_DIR)/; \
	cp -r $(MODULEDIR)/$(CGOSDRVSRC)/CgosLib/Lx/libcgos.so debian/$$package/lib/x86_64-linux-gnu/; \
	cp -r $(CHASSISBLDDIR)/* debian/$$package/usr/share/sonic/device/$$hwsku/; \
	\
	platform=$(word 4, $(PLATFORMS)); \
	hwsku=$(word 4, $(HWSKUS)); \
	package=$(word 4, $(PACKAGES)); \
	echo "Installing ... $$hwsku -> $$platform -> $$package";\
	mkdir -p debian/$$package/usr/bin; \
	mkdir -p debian/$$package/$(KERNERDIR)/$(INSTALL_MOD_DIR); \
	mkdir -p debian/$$package/usr/local/bin; \
	mkdir -p debian/$$package/lib/systemd/system; \
	mkdir -p debian/$$package/lib/x86_64-linux-gnu; \
	mkdir -p debian/$$package/usr/share/sonic/device/$$hwsku; \
	cp -r $$platform/$(SERVICE)/*.service debian/$$package/lib/systemd/system/; \
	cp -r $$platform/$(UTILS)/* $(UTILSDIR)/* debian/$$package/usr/local/bin/; \
	cp -r $(SCRIPTSDIR)/* debian/$$package/usr/bin/; \
	cp -r $(MODULEDIR)/$(CGOSDRVSRC)/CgosDrv/Lx/*.ko debian/$$package/$(KERNERDIR)/$(INSTALL_MOD_DIR)/; \
	cp -r $(MODULEDIR)/$(CGOSDRVSRC)/CgosLib/Lx/libcgos.so debian/$$package/lib/x86_64-linux-gnu/; \
	cp -r $(CHASSISBLDDIR)/* debian/$$package/usr/share/sonic/device/$$hwsku/; \
	\
	platform=$(word 5, $(PLATFORMS)); \
	hwsku=$(word 5, $(HWSKUS)); \
	package=$(word 5, $(PACKAGES)); \
	echo "Installing ... $$hwsku -> $$platform -> $$package";\
	mkdir -p debian/$$package/usr/bin; \
	mkdir -p debian/$$package/$(KERNERDIR)/$(INSTALL_MOD_DIR); \
	mkdir -p debian/$$package/usr/local/bin; \
	mkdir -p debian/$$package/lib/systemd/system; \
	mkdir -p debian/$$package/lib/x86_64-linux-gnu; \
	mkdir -p debian/$$package/usr/share/sonic/device/$$hwsku; \
	cp -r $$platform/$(SERVICE)/*.service debian/$$package/lib/systemd/system/; \
	cp -r $$platform/$(UTILS)/* $(UTILSDIR)/* debian/$$package/usr/local/bin/; \
	cp -r $(SCRIPTSDIR)/* debian/$$package/usr/bin/; \
	cp -r $(MODULEDIR)/$(CGOSDRVSRC)/CgosDrv/Lx/*.ko debian/$$package/$(KERNERDIR)/$(INSTALL_MOD_DIR)/; \
	cp -r $(MODULEDIR)/$(CGOSDRVSRC)/CgosLib/Lx/libcgos.so debian/$$package/lib/x86_64-linux-gnu/; \
	cp -r $(CHASSISBLDDIR)/* debian/$$package/usr/share/sonic/device/$$hwsku/;

override_dh_usrlocal:

override_dh_clean:
	make KERNELDIR=$(KERNERDIR)/build -C $(MODULEDIR)/$(CGOSDRVSRC) clean; \
	make -C $(KERNERDIR)/build M=$(MODULEDIR)/$(SIODRVSRC) clean; \
	dh_clean; \
	rm -rf $(BUILDDIR); \
	rm -rf *.egg-info;
